#include <iostream>

using namespace std;

struct Node {
    int data;
    Node* prev;
    Node* next;
    Node(int val) : data(val), prev(nullptr), next(nullptr) {}
};

void insert(Node*& head, Node*& tail, int value) {
    Node* newNode = new Node(value);
    if (!head) {
        head = tail = newNode;
    }
    else {
        head->prev = newNode;
        newNode->next = head;
        head = newNode;
    }
}

int count_triplets(Node* head) {
    if (!head || !head->next || !head->next->next) return 0;
    int count = 0;
    Node* current = head->next;
    while (current->next) {
        if (current->prev->data + current->data + current->next->data == 0) {
            count++;
        }
        current = current->next;
    }
    return count;
}

int main() {
    int n;
    cin >> n;
    Node* head = nullptr;
    Node* tail = nullptr;
    for (int i = 0; i < n; i++) {
        int value;
        cin >> value;
        insert(head, tail, value);
    }
    cout << count_triplets(head) << endl;

    return 0;
}
