#include <iostream>
#include <vector>
#include <queue>
using namespace std;

int shortestPath(int n, vector<vector<int>>& adj, int X, int Y) {
    if (X == Y) return 0; // Trường hợp X và Y trùng nhau
    vector<int> distance(n + 1, -1); // Khoảng cách từ X đến các đỉnh
    queue<int> q;
    distance[X] = 0;
    q.push(X); // Duyệt từ X
    
    while (!q.empty()) { // Duyệt từng phần tử trong queue
        int current = q.front();
        q.pop(); // Duyệt đến đâu xoá đến đấy
        
        for (int neighbor : adj[current]) {
            if (distance[neighbor] == -1) { // Duyệt từng phần tử kề chưa thăm
                distance[neighbor] = distance[current] + 1; // Cập nhật khoảng cách
                if (neighbor == Y) {
                    return distance[Y]; // Trả về nếu tìm thấy Y
                }
                q.push(neighbor); // Đẩy phần tử này vào queue để tiếp tục duyệt
            }
        }
    }
    return -1;
}

int main() {
    int n, m, X, Y;
    cin >> n >> m >> X >> Y;
    vector<vector<int>> adj(n + 1); // Danh sách kề
    for (int i = 0; i < m; ++i) {
        int x, y;
        cin >> x >> y;
        adj[x].push_back(y);
    }
    int result = shortestPath(n, adj, X, Y);
    cout << result << endl;
    return 0;
}
